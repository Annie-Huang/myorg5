
First set:
================
C:\react\myorg5>nx g lib ui-datepicker --dry-run
? Which stylesheet format would you like to use? CSS

C:\react\myorg5>nx g component date-picker --project=ui-datepicker

C:\react\myorg5>nx g storybook-configuration ui-datepicker --dry-run
? Configure a cypress e2e app to run against the storybook instance? Yes
? Automatically generate *.stories.ts files for components declared in this library? Yes
? Automatically generate *.spec.ts files in the cypress e2e app generated by the cypress-configure schematic? Yes

C:\react\myorg5>nx run ui-datepicker:storybook


Second set:
==================
C:\react\myorg5>nx g lib ui-greeter
? Which stylesheet format would you like to use? CSS

C:\react\myorg5>nx g component greeter --project=ui-greeter

C:\react\myorg5>nx g storybook-configuration ui-greeter
? Configure a cypress e2e app to run against the storybook instance? Yes
? Automatically generate *.stories.ts files for components declared in this library? Yes
? Automatically generate *.spec.ts files in the cypress e2e app generated by the cypress-configure schematic? Yes

C:\react\myorg5>nx run ui-greeter:storybook


Global shared storybook configure
(The reason this set of code looks more complex is because they use nx console to generate the code)
==============================================================================================================
C:\react\myorg5>nx generate @nrwl/angular:library --name=storybook --dry-run    << this is the same as "nx g lib storybook"
? Which stylesheet format would you like to use? CSS

(if your lib is in the share folder, e.g.
nx g lib share\ui-datepicker
nx g lib share\ui-greeter
Then you can create the storybook in this folder too:
nx generate @nrwl/angular:library --name=storybook --directory=shared)


C:\react\myorg5>nx generate @nrwl/angular:storybook-configuration --name=storybook --dry-run
? Configure a cypress e2e app to run against the storybook instance? No
? Automatically generate *.stories.ts files for components declared in this library? No
? Automatically generate *.spec.ts files in the cypress e2e app generated by the cypress-configure schematic? No
(no for everything because we just use it as a wrapper for all the stories in other folders)


In C:\react\myorg5\libs\storybook\.storybook\config.js
Change:
configure(require.context('../src/lib', true, /\.stories\.tsx?$/), module);
to
configure(require.context('../..', true, /\.stories\.tsx?$/), module);


C:\react\myorg5>nx run storybook:storybook
